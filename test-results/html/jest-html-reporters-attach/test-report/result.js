window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":7,"numPassedTestSuites":0,"numPassedTests":8,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":15,"startTime":1759709770909,"success":false,"testResults":[{"numFailingTests":7,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759709775473,"runtime":4200,"slow":false,"start":1759709771273},"testFilePath":"C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\tests\\integration\\learning-flow.spec.ts","failureMessage":"  ● Learning Flow Integration › Complete Investigation Lifecycle › should improve strategy selection over multiple investigations\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 3\n    Received: 0\n\n    \u001b[0m \u001b[90m 119 |\u001b[39m       \u001b[36mconst\u001b[39m learningData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m dataStore\u001b[33m.\u001b[39mloadLearningData(\u001b[32m'TAN'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 120 |\u001b[39m       expect(learningData\u001b[33m.\u001b[39mtotalInvestigations)\u001b[33m.\u001b[39mtoBe(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m       expect(learningData\u001b[33m.\u001b[39msuccessfulInvestigations)\u001b[33m.\u001b[39mtoBe(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 122 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 123 |\u001b[39m\n     \u001b[90m 124 |\u001b[39m     it(\u001b[32m'should track performance metrics accurately'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (tests/integration/learning-flow.spec.ts:121:53)\n\n  ● Learning Flow Integration › Complete Investigation Lifecycle › should track performance metrics accurately\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 136 |\u001b[39m         expect(result\u001b[33m.\u001b[39mmetrics\u001b[33m.\u001b[39mtotalDuration)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 137 |\u001b[39m       } \u001b[36melse\u001b[39m \u001b[36mif\u001b[39m (\u001b[32m'duration'\u001b[39m \u001b[36min\u001b[39m result\u001b[33m.\u001b[39mmetrics) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 138 |\u001b[39m         expect(result\u001b[33m.\u001b[39mmetrics\u001b[33m.\u001b[39mduration)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 139 |\u001b[39m       }\n     \u001b[90m 140 |\u001b[39m       expect(result\u001b[33m.\u001b[39mstartedAt)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m 141 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/integration/learning-flow.spec.ts:138:41)\n\n  ● Learning Flow Integration › Cross-Agent Knowledge Sharing › should validate patterns before sharing to specific agents\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 0\n    Received: 1\n\n    \u001b[0m \u001b[90m 220 |\u001b[39m\n     \u001b[90m 221 |\u001b[39m       \u001b[90m// TAN should NOT receive (only accepts code-structure)\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 222 |\u001b[39m       expect(tanReceived\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 223 |\u001b[39m\n     \u001b[90m 224 |\u001b[39m       \u001b[90m// INO should receive (accepts all)\u001b[39m\n     \u001b[90m 225 |\u001b[39m       expect(inoReceived\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/integration/learning-flow.spec.ts:222:34)\n\n  ● Learning Flow Integration › Strategy Learning and Selection › should improve strategy confidence over time\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 321 |\u001b[39m       \u001b[36mconst\u001b[39m strategies \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m(learningData\u001b[33m.\u001b[39mstrategies\u001b[33m.\u001b[39mvalues())\u001b[33m;\u001b[39m\n     \u001b[90m 322 |\u001b[39m       \u001b[36mconst\u001b[39m hasHighConfidence \u001b[33m=\u001b[39m strategies\u001b[33m.\u001b[39msome(s \u001b[33m=>\u001b[39m s\u001b[33m.\u001b[39mconfidence \u001b[33m>\u001b[39m \u001b[35m0.5\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 323 |\u001b[39m       expect(hasHighConfidence)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 324 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 325 |\u001b[39m\n     \u001b[90m 326 |\u001b[39m     it(\u001b[32m'should select appropriate strategy based on context'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (tests/integration/learning-flow.spec.ts:323:33)\n\n  ● Learning Flow Integration › Strategy Learning and Selection › should select appropriate strategy based on context\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected value: \"bug-fix\"\n    Received array: [\"bug-investigation\"]\n\n    \u001b[0m \u001b[90m 376 |\u001b[39m\n     \u001b[90m 377 |\u001b[39m       \u001b[36mconst\u001b[39m selectedBugFix \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m strategyEngine\u001b[33m.\u001b[39mselectStrategy(\u001b[32m'TAN'\u001b[39m\u001b[33m,\u001b[39m bugFixContext)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 378 |\u001b[39m       expect(selectedBugFix\u001b[33m.\u001b[39mapplicableContexts)\u001b[33m.\u001b[39mtoContain(\u001b[32m'bug-fix'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 379 |\u001b[39m\n     \u001b[90m 380 |\u001b[39m       \u001b[90m// Select for refactor context\u001b[39m\n     \u001b[90m 381 |\u001b[39m       \u001b[36mconst\u001b[39m refactorContext\u001b[33m:\u001b[39m \u001b[33mInvestigationContext\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (tests/integration/learning-flow.spec.ts:378:49)\n\n  ● Learning Flow Integration › Data Persistence › should persist learning data across sessions\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 409 |\u001b[39m\n     \u001b[90m 410 |\u001b[39m       \u001b[90m// Verify data persisted\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 411 |\u001b[39m       expect(loadedData\u001b[33m.\u001b[39mtotalInvestigations)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 412 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 413 |\u001b[39m\n     \u001b[90m 414 |\u001b[39m     it(\u001b[32m'should export and import learning data'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (tests/integration/learning-flow.spec.ts:411:46)\n\n  ● Learning Flow Integration › Error Handling and Recovery › should handle concurrent investigations safely\n\n    Atomic write failed for c:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\trinity\\learning\\test-integration\\TAN\\errors.json: ENOENT: no such file or directory, rename 'c:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\trinity\\learning\\test-integration\\TAN\\errors.json.tmp' -> 'c:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\trinity\\learning\\test-integration\\TAN\\errors.json'\n\n    \u001b[0m \u001b[90m 280 |\u001b[39m       \u001b[90m// Cleanup temp file on failure\u001b[39m\n     \u001b[90m 281 |\u001b[39m       \u001b[36mawait\u001b[39m fs\u001b[33m.\u001b[39munlink(tempPath)\u001b[33m.\u001b[39m\u001b[36mcatch\u001b[39m(() \u001b[33m=>\u001b[39m {})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 282 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`Atomic write failed for ${filePath}: ${(error as Error).message}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 283 |\u001b[39m     }\n     \u001b[90m 284 |\u001b[39m   }\n     \u001b[90m 285 |\u001b[39m\u001b[0m\n\n      at LearningDataStore.atomicWrite (src/learning/LearningDataStore.ts:282:13)\n      at LearningDataStore.saveErrors (src/learning/LearningDataStore.ts:241:5)\n          at async Promise.all (index 2)\n      at LearningDataStore.saveLearningData (src/learning/LearningDataStore.ts:105:5)\n      at PerformanceTracker.updateStrategyPerformance (src/learning/PerformanceTracker.ts:295:5)\n      at PerformanceTracker.trackInvestigationComplete (src/learning/PerformanceTracker.ts:122:7)\n      at TANAgent.executeInvestigation (src/agents/TAN.ts:80:7)\n          at async Promise.all (index 3)\n      at Object.<anonymous> (tests/integration/learning-flow.spec.ts:545:23)\n","testResults":[{"ancestorTitles":["Learning Flow Integration","Complete Investigation Lifecycle"],"duration":24,"failureMessages":[],"fullName":"Learning Flow Integration Complete Investigation Lifecycle should execute complete investigation with learning","status":"passed","title":"should execute complete investigation with learning"},{"ancestorTitles":["Learning Flow Integration","Complete Investigation Lifecycle"],"duration":42,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 3\nReceived: 0\n    at Object.<anonymous> (C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\tests\\integration\\learning-flow.spec.ts:121:53)"],"fullName":"Learning Flow Integration Complete Investigation Lifecycle should improve strategy selection over multiple investigations","status":"failed","title":"should improve strategy selection over multiple investigations"},{"ancestorTitles":["Learning Flow Integration","Complete Investigation Lifecycle"],"duration":14,"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\tests\\integration\\learning-flow.spec.ts:138:41)"],"fullName":"Learning Flow Integration Complete Investigation Lifecycle should track performance metrics accurately","status":"failed","title":"should track performance metrics accurately"},{"ancestorTitles":["Learning Flow Integration","Cross-Agent Knowledge Sharing"],"duration":62,"failureMessages":[],"fullName":"Learning Flow Integration Cross-Agent Knowledge Sharing should share high-confidence patterns between agents","status":"passed","title":"should share high-confidence patterns between agents"},{"ancestorTitles":["Learning Flow Integration","Cross-Agent Knowledge Sharing"],"duration":62,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: 1\n    at Object.<anonymous> (C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\tests\\integration\\learning-flow.spec.ts:222:34)"],"fullName":"Learning Flow Integration Cross-Agent Knowledge Sharing should validate patterns before sharing to specific agents","status":"failed","title":"should validate patterns before sharing to specific agents"},{"ancestorTitles":["Learning Flow Integration","Cross-Agent Knowledge Sharing"],"duration":93,"failureMessages":[],"fullName":"Learning Flow Integration Cross-Agent Knowledge Sharing should accumulate patterns from multiple agents","status":"passed","title":"should accumulate patterns from multiple agents"},{"ancestorTitles":["Learning Flow Integration","Strategy Learning and Selection"],"duration":102,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\tests\\integration\\learning-flow.spec.ts:323:33)"],"fullName":"Learning Flow Integration Strategy Learning and Selection should improve strategy confidence over time","status":"failed","title":"should improve strategy confidence over time"},{"ancestorTitles":["Learning Flow Integration","Strategy Learning and Selection"],"duration":9,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected value: \"bug-fix\"\nReceived array: [\"bug-investigation\"]\n    at Object.<anonymous> (C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\tests\\integration\\learning-flow.spec.ts:378:49)"],"fullName":"Learning Flow Integration Strategy Learning and Selection should select appropriate strategy based on context","status":"failed","title":"should select appropriate strategy based on context"},{"ancestorTitles":["Learning Flow Integration","Data Persistence"],"duration":14,"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\tests\\integration\\learning-flow.spec.ts:411:46)"],"fullName":"Learning Flow Integration Data Persistence should persist learning data across sessions","status":"failed","title":"should persist learning data across sessions"},{"ancestorTitles":["Learning Flow Integration","Data Persistence"],"duration":14,"failureMessages":[],"fullName":"Learning Flow Integration Data Persistence should export and import learning data","status":"passed","title":"should export and import learning data"},{"ancestorTitles":["Learning Flow Integration","Performance Optimization"],"duration":1029,"failureMessages":[],"fullName":"Learning Flow Integration Performance Optimization should complete 100 investigations within performance targets","status":"passed","title":"should complete 100 investigations within performance targets"},{"ancestorTitles":["Learning Flow Integration","Performance Optimization"],"duration":212,"failureMessages":[],"fullName":"Learning Flow Integration Performance Optimization should show performance improvement over time","status":"passed","title":"should show performance improvement over time"},{"ancestorTitles":["Learning Flow Integration","Error Handling and Recovery"],"duration":14,"failureMessages":[],"fullName":"Learning Flow Integration Error Handling and Recovery should recover from failed investigations","status":"passed","title":"should recover from failed investigations"},{"ancestorTitles":["Learning Flow Integration","Error Handling and Recovery"],"duration":346,"failureMessages":["Error: Atomic write failed for c:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\trinity\\learning\\test-integration\\TAN\\errors.json: ENOENT: no such file or directory, rename 'c:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\trinity\\learning\\test-integration\\TAN\\errors.json.tmp' -> 'c:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\trinity\\learning\\test-integration\\TAN\\errors.json'\n    at LearningDataStore.atomicWrite (C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\src\\learning\\LearningDataStore.ts:282:13)\n    at LearningDataStore.saveErrors (C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\src\\learning\\LearningDataStore.ts:241:5)\n    at async Promise.all (index 2)\n    at LearningDataStore.saveLearningData (C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\src\\learning\\LearningDataStore.ts:105:5)\n    at PerformanceTracker.updateStrategyPerformance (C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\src\\learning\\PerformanceTracker.ts:295:5)\n    at PerformanceTracker.trackInvestigationComplete (C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\src\\learning\\PerformanceTracker.ts:122:7)\n    at TANAgent.executeInvestigation (C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\src\\agents\\TAN.ts:80:7)\n    at async Promise.all (index 3)\n    at Object.<anonymous> (C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\tests\\integration\\learning-flow.spec.ts:545:23)"],"fullName":"Learning Flow Integration Error Handling and Recovery should handle concurrent investigations safely","status":"failed","title":"should handle concurrent investigations safely"},{"ancestorTitles":["Learning Flow Integration","Multi-Agent Coordination"],"duration":43,"failureMessages":[],"fullName":"Learning Flow Integration Multi-Agent Coordination should coordinate investigations across multiple agents","status":"passed","title":"should coordinate investigations across multiple agents"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/**/*.{ts,js}","!src/**/*.d.ts","!src/**/*.spec.ts","!src/**/__tests__/**"],"coverageDirectory":"C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\coverage","coverageProvider":"babel","coverageReporters":["text","lcov","html","json-summary"],"coverageThreshold":{"global":{"branches":80,"functions":80,"lines":80,"statements":80}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":8,"noStackTrace":false,"nonFlagArgs":["tests/integration/learning-flow.spec.ts"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[{"displayName":"unit","preset":"ts-jest","testEnvironment":"node","testMatch":["<rootDir>/tests/unit/**/*.spec.ts"],"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@shared/types$":"<rootDir>/src/shared/types/index.ts"},"globals":{"ts-jest":{"tsconfig":{"esModuleInterop":true,"allowSyntheticDefaultImports":true}}},"rootDir":"C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK"},{"displayName":"integration","preset":"ts-jest","testEnvironment":"node","testMatch":["<rootDir>/tests/integration/**/*.spec.ts"],"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@shared/types$":"<rootDir>/src/shared/types/index.ts"},"globals":{"ts-jest":{"tsconfig":{"esModuleInterop":true,"allowSyntheticDefaultImports":true}}},"rootDir":"C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK"},{"displayName":"e2e","preset":"ts-jest","testEnvironment":"node","testMatch":["<rootDir>/tests/e2e/**/*.spec.ts"],"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@shared/types$":"<rootDir>/src/shared/types/index.ts"},"globals":{"ts-jest":{"tsconfig":{"esModuleInterop":true,"allowSyntheticDefaultImports":true}}},"rootDir":"C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK"},{"displayName":"performance","preset":"ts-jest","testEnvironment":"node","testMatch":["<rootDir>/tests/performance/**/*.spec.ts"],"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@shared/types$":"<rootDir>/src/shared/types/index.ts"},"globals":{"ts-jest":{"tsconfig":{"esModuleInterop":true,"allowSyntheticDefaultImports":true}}},"rootDir":"C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK"}],"reporters":[["default",{}],["C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\node_modules\\jest-junit\\index.js",{"outputDirectory":"./test-results","outputName":"junit.xml","classNameTemplate":"{classname}","titleTemplate":"{title}","ancestorSeparator":" › ","usePathForSuiteName":true}],["C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./test-results/html","filename":"test-report.html","pageTitle":"Trinity Method SDK Test Report","expand":true}]],"rootDir":"C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK","runTestsByPath":false,"seed":660292723,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"tests\\\\integration\\\\learning-flow.spec.ts","testSequencer":"C:\\Users\\lukaf\\Desktop\\Dev Work\\Trinity Method SDK\\node_modules\\@jest\\test-sequencer\\build\\index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1759709775484,"_reporterOptions":{"publicPath":"./test-results/html","filename":"test-report.html","expand":true,"pageTitle":"Trinity Method SDK Test Report","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})